name: Temporal Shop Build Pipeline
on:
  push:
    branches:
      - svelteify
#  pull_request:
#      - main
env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 429214323166
  CLUSTER_NAME: sa-prod
  GH_ACTIONS_ROLE: arn:aws:iam::429214323166:role/github-actions-role
  ECR_REPOSITORY: temporal-shop/web
  SLACK_CHANNEL: C038377FSCF #team-gtm
  GOPRIVATE: github.com/temporalio
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)
  S3_DIR: "s3://temporal-sa/temporal-shop"
jobs:
  cfg:
    runs-on: temporal-shop #this should be in the CR created for the runner
    outputs:
      s3-dir: ${{ steps.s3.outputs.dir }}
      builds-dir: ${{ steps.builds.outputs.dir }}
      builds-bff-dir: ${{ steps.builds-bff.outputs.dir }}
      builds-web-dir: ${{ steps.builds-web.outputs.dir }}
      web-dir: ${{ steps.web.outputs.dir }}
    steps:
      - id: s3
        run: echo "dir=${{ env.S3_DIR }}" >> $GITHUB_OUTPUT
      - id: builds
        run: echo "dir=${{ steps.s3.outputs.dir }}/builds/${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
      - id: builds-bff
        run: echo "dir=${{ steps.builds.outputs.dir }}/bff" >> $GITHUB_OUTPUT
      - id: builds-web
        run: echo "dir=${{ steps.builds.outputs.dir }}/web" >> $GITHUB_OUTPUT
      - id: web
        run: echo "dir=${{ steps.s3.outputs.dir }}/web" >> $GITHUB_OUTPUT
  ui:
    needs: [cfg]
    runs-on: temporal-shop #this should be in the CR created for the runner
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.GH_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: asdf
        id: asdf
        uses: mnichols/asdf-composite-action@v1
      - name: Dependencies
        run: |
          cd web/ui && npm i
#      - name: Test
#        run: |
#          cd web/ui && npx playwright install && npm run test
      - name: Build
        run: cd web/ui && npm run build
      - name: Publish Web UI
        run: aws s3 sync web/bff/generated ${{ needs.cfg.outputs.builds-web-dir }}
  bff:
    needs: [cfg]
    runs-on: temporal-shop #this should be in the CR created for the runner
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.GH_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: asdf
        id: asdf
        uses: mnichols/asdf-composite-action@v1
      - name: Verify dependencies
        run: cd web && go mod tidy && go mod verify
      - name: Lint
        run: cd web && golangci-lint run
      - name: Test
        run: cd web && go test -race -timeout=5m -cover -count=1  ./...
      - name: Build
        run: |
          mkdir build
          BUILD_PKG="github.com/${{ github.repository }}/web/bff/build"
          LINKER_FLAGS="-X '${BUILD_PKG}.Commit=${{ env.SHORT_SHA }}' -X '${BUILD_PKG}.Version=${{ github.ref_name }}' -X '${BUILD_PKG}.BuildDate=${{ github.event.repository.updated_at}}'"
          echo ${LINKER_FLAGS}
          cd web && go build -ldflags "${LINKER_FLAGS}" -o ../build/bff bff/cmd/bff/main.go
      - name: Store Binary
        run: aws s3 sync build ${{ needs.cfg.outputs.builds-bff-dir }}
  deploy:
    runs-on: temporal-shop #this should be in the CR created for the runner
    needs: [cfg,ui,bff]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.GH_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: asdf
        id: asdf
        uses: mnichols/asdf-composite-action@v1
      - name: fetch artifacts
        run: |
          mkdir build
          aws s3 sync ${{ needs.cfg.outputs.builds-dir }} build
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push to AWS ECR
        id: build-image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: temporal-shop/web
          addLatest: true
          # tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: ${{ steps.login-ecr.outputs.registry }}
          dockerfile: Dockerfile.web
      - name: Split Tags
        uses: jungwinter/split@v2
        id: split
        with:
          separator: ','
          msg: ${{ steps.build-image.outputs.tags }}
      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --role-arn ${{ env.GH_ACTIONS_ROLE }} --region ${{ env.AWS_REGION }}
        shell: bash
      - name: Deploy BFF
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          CTX=$(kubectl config current-context)
          IMG=${{ steps.build-image.outputs.imageFullName }}:${{ steps.split.outputs._0 }}
          echo "deploying to $CTX => $IMG"
          $(cd kustomize/web/overlays/prod && \
            kustomize edit set image amazonaws.com/web="$IMG")

          kustomize build kustomize/web/overlays/prod | kubectl apply -f -
      - name: Deploy UI
        run: |
          aws s3 sync build/web ${{ needs.cfg.outputs.web-dir }}